<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress, | 不歸錄]]></title>
  <link href="http://tonytonyjan.github.com/categories/octopress-/atom.xml" rel="self"/>
  <link href="http://tonytonyjan.github.com/"/>
  <updated>2012-06-14T00:49:01+08:00</updated>
  <id>http://tonytonyjan.github.com/</id>
  <author>
    <name><![CDATA[大兜]]></name>
    <email><![CDATA[tonytonyjan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[將 Octopress Page 依照標題自動索引]]></title>
    <link href="http://tonytonyjan.github.com/2012/05/01/indexer-for-octopress/"/>
    <updated>2012-05-01T13:30:00+08:00</updated>
    <id>http://tonytonyjan.github.com/2012/05/01/indexer-for-octopress</id>
    <content type="html"><![CDATA[<ul>
<li><a href="/blog/octopress-indexer">範例展示、文件</a></li>
<li><a href="https://gist.github.com/2565249/6151c81f7af333d5c1d9dd0b2bdcba2c7a966dca">gist</a></li>
</ul>


<h2>用法懶人包</h2>

<ol>
<li>下載 <a href="https://gist.github.com/gists/2565249/download">Indexer for Octopress</a>。</li>
<li>將 <code>indexer.rb</code> 複製到 <code>plugins</code> 目錄下。</li>
<li><p>新增 <code>source\_includes\custom\asides\indexer.html</code>。</p>

<pre><code>
{% if page.indexer == true %}
  &lt;section&gt;
  &lt;h1&gt;Catalog&lt;/h1&gt;
  {{ page.indexer_aside }}
  &lt;/section&gt;
{% else %}
  {% if site.page_asides.size %}
    {% include_array default_asides %}
  {% endif %}
{% endif %}

</code></pre></li>
<li><p>編輯 <code>_config.yml</code>。</p>

<pre><code># Each layout uses the default asides, but they can have their own asides instead. Simply uncomment the lines below
# and add an array with the asides you want to use.
# blog_index_asides:
# post_asides:
page_asides: [custom/asides/indexer.html] # 加上這個
</code></pre></li>
<li><p>完成！之後只要在你需要索引的 page 上方 YAML 區塊加上 <code>indexer: true</code>，右方欄位就會自己索引了。</p></li>
</ol>


<!-- more -->


<h2>為什麼有這種需求？</h2>

<p>有想過用 Octopress 寫說明文件，雖然用 Markdown 可以很方便的杜撰，但文章只要一長了，要找標題特定的內容不用滑鼠滾輪一個一個找，就得用搜尋的，而且無法一次觀看到整篇文章的大綱。這時候最適合用索引來解決這個問題，而索引的優點之多，我想有寫過教學文件或是 wiki 的人應該是最清楚不過了。</p>

<p>但是 Octopress 如果要做到這樣，你要嘛用 Textile 取代 Mardown，如果用 Markdown 就還要徒手寫 tag，例如：</p>

<pre><code>&lt;h2 id="getting-start"&gt;起步走&lt;/h2&gt;
</code></pre>

<p><strong>這會讓寫作的爽度降低。</strong></p>

<p>但有人可能會說改用 Textile 就好了，確實，但麻煩的在後面：就算你用 Textile 好了，你還得為你的文件特地寫一個 aside，裡面有個兩層的 list，每個標題都有 <code>&lt;a&gt;</code> 包起來，還得自己寫 <code>href="#xxx"</code>。</p>

<p><strong>這更讓寫作的爽度降到冰點。</strong></p>

<p>好吧，萬一你是個很有耐心的人，你確實的在文章的 heading 都加上了 ID，且也自己寫了一個 asides 放在 <code>source\_includes\custom\asides\</code> 之下。但當你要設定 <code>_config.yml</code> 時發現：</p>

<pre><code>page_asides: [custom/asides/xxx.html]
</code></pre>

<p><img src="/images/dead-eyes.jpg"></p>

<p>原來 page asides 是全局的，意思是接下來要處理的問題：你要怎麼在不影響其他的 page 的情況下，在特定 page 顯示特定 page？</p>

<p>這時候我就期望尋求一個方法，讓寫作只要專心在 heading 的編排就好，不用理會索引這樣瑣碎的工作。</p>

<h2>你寫這個幹麼？</h2>

<p>當然是為了解決自己問題（但也有可能同時是別人的問題）。</p>

<p>因為翻譯 Rails Guide 的關係，這幾天常常光顧 <a href="https://github.com/lifo/docrails">docrails</a>，以及 <a href="https://github.com/rails/rails">Rails</a> 的倉庫。對 Rilas Guide 生成文件的方式感到好奇，以 <a href="http://guides.rubyonrails.org/getting_started.html">Getting Start with Rails</a> 這篇為例吧，右方的索引全部對應到左方的 h3 和 h4，也就是如果有個 heading 長這樣：</p>

<pre><code>&lt;h3 id="guide-assumptions"&gt;1 Guide Assumptions&lt;/h3&gt;
</code></pre>

<p>那麼右方所有就會有對應的</p>

<pre><code>&lt;li&gt;&lt;a href="#guide-assumptions"&gt;Guide Assumptions&lt;/a&gt;&lt;/li&gt;
</code></pre>

<p>但實際上，在 Textile 文件中 他們實際是這樣寫的：</p>

<pre><code>h3. Guide Assumptions
</code></pre>

<p>研究了他們的原始碼，發現 Rails Guide 的 generator 在 render 之前做了這兩件事情：</p>

<ol>
<li><p>將所有的 heading 賦予同名 id。</p>

<p>也就是將 <code>h3. Guide Assumptions</code> 替換成 <code>h3(#guide-assumptions). Guide Assumptions</code>。</p></li>
<li><p>遞迴的方式產生清單。</p>

<p>可以分析 <code>&lt;h3&gt;</code> 下的 <code>&lt;h4&gt;</code>，做出最多兩層的索引清單放在右方。</p></li>
</ol>


<p>我馬上想到的一件事情就是，這功能可以用在 Octopress 上。</p>
]]></content>
  </entry>
  
</feed>
